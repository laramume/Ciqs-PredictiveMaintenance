{
    "contentVersion": "1.0.0.0",
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "parameters": {
        "sqlServerUserName": {
            "metadata": {
                "description": "Username for SQL Server that will be created for results database (minimum 3 characters)"
            },
            "type": "string",
            "minLength": 3
          },
          "sqlServerPassword": {
              "metadata": {
                  "description": "Password for SQL Server that will be created for results database"
              },
              "type": "securestring",
              "minLength": 8
          }
    },
    "variables": {
        "namePrefix": "[resourceGroup().name]",
        "uniqueNamePrefix": "[concat(variables('namePrefix'), uniqueString(subscription().subscriptionId))]",
        "location": "[resourceGroup().location]",
        "sqlVersion": "2014-04-01",
        "sfVersion": "2016-03-01",
        "wsVersion": "2016-03-01",
        "sbVersion": "2014-09-01",
        "sqlServerName": "[concat(variables('uniqueNamePrefix'),'srv')]",
        "databaseName": "pmaintenancedb",
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255",
        "edition": "Basic",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": "2147483648",
        "sqlSvrResourceId": "[resourceId('Microsoft.Sql/servers', variables('sqlServerName'))]",
        "sqlDbResourceId": "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServerName'), variables('databaseName'))]",
        "namespaceName": "[concat(variables('uniqueNamePrefix'),'ns')]",
        "ingestEventHubName": "[concat(variables('namePrefix'),'eh')]",
        "blobConsumerGroupName": "[concat(variables('namePrefix'),'blobcg')]",
        "pbiConsumerGroupName": "[concat(variables('namePrefix'),'pbicg')]",
        "sbKeyName": "RootManageSharedAccessKey",
        "sbKeyResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('namespaceName'), variables('sbKeyName'))]",
        "sbResourceId": "[resourceId('Microsoft.Eventhub/namespaces', variables('namespaceName'))]"
    },
    "resources": [       
        {
            "name": "[variables('sqlServerName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[variables('location')]",
            "apiVersion": "[variables('sqlVersion')]",
            "properties": {
                "administratorLogin": "[parameters('sqlServerUserName')]",
                "administratorLoginPassword": "[parameters('sqlServerPassword')]"
            },
            "resources": [
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "location": "[variables('location')]",
                    "apiVersion": "[variables('sqlVersion')]",
                    "dependsOn": [
                        "[variables('sqlSvrResourceId')]"
                    ],
                    "properties": {
                        "edition": "[variables('edition')]",
                        "collation": "[variables('collation')]",
                        "maxSizeBytes": "[variables('maxSizeBytes')]"
                    }
                },
                {
                    "apiVersion": "[variables('sqlVersion')]",
                    "type": "firewallrules",
                    "location": "[variables('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "dependsOn": [
                        "[variables('sqlSvrResourceId')]"
                    ],
                    "properties": {
                        "startIpAddress": "[variables('startIpAddress')]",
                        "endIpAddress": "[variables('endIpAddress')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('sbVersion')]",
            "name": "[variables('namespaceName')]",
            "type": "Microsoft.EventHub/namespaces",
            "location": "[variables('location')]",
            "properties": {
                "region": "[variables('location')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('sbVersion')]",
                    "name": "[variables('ingestEventHubName')]",
                    "type": "eventHubs",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[variables('sbResourceId')]"
                    ],
                    "properties": {
                        "path": "[variables('ingestEventHubName')]"
                    },
                    "resources": [
                        {
                            "apiVersion": "[variables('sbVersion')]",
                            "type": "ConsumerGroups",
                            "name": "[variables('blobConsumerGroupName')]",
                            "dependsOn": [
                                "[variables('ingestEventHubName')]"
                            ],
                            "properties": {
                                "enableCheckpoint": "false"
                            }
                        },
                        {
                            "apiVersion": "[variables('sbVersion')]",
                            "type": "ConsumerGroups",
                            "name": "[variables('pbiConsumerGroupName')]",
                            "dependsOn": [
                                "[variables('ingestEventHubName')]"
                            ],
                            "properties": {
                                "enableCheckpoint": "false"
                            }
                        }
                    ],
                    "metadata": {
                        "description": "Create the Ingest Event Hub"
                    }
                }
            ]
        }
    ],
    "outputs": {
        "ingestEventHubName": {
            "type": "string",
            "value": "[variables('ingestEventHubName')]"
        },
        "ehConnectionString": {
            "type": "string",
            "value": "[listkeys(variables('sbKeyResourceId'), variables('sbVersion')).primaryConnectionString]"
        },
        "sqlServerName": {
            "type": "string",
            "value": "[variables('sqlServerName')]"
        },
        "databaseName": {
            "type": "string",
            "value": "[variables('databaseName')]"
        },
        "sharedAccessPolicyKey": {
            "type": "string",
            "value": "[listKeys(variables('sbKeyResourceId'), variables('sbVersion')).primaryKey]"
        },
        "sqlServerUrl": {
            "type": "string",
            "value": "[concat('https://portal.azure.com/#resource/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Sql/servers/', variables('sqlServerName'), '/databases/',variables('databaseName'),'/overview')]"
        }
    }
}
